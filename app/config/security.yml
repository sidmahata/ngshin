security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                login_path:               fos_user_security_login
                check_path:               fos_user_security_check
                default_target_path: /profile/
            logout:
                path:   /user/logout
                target: /
            anonymous:    true


#        api:
#            pattern:  ^/api/login
#            provider:  fos_userbundle
#            stateless: true
#            anonymous: true
#            form_login:
#                check_path:               api_login_check
#                success_handler:          lexik_jwt_authentication.handler.authentication_success
#                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false
#            lexik_jwt:
#                authorization_header: # check token in Authorization Header
#                    enabled: true
#                    prefix:  Bearer
#                query_parameter:      # check token in query string parameter
#                    enabled: true
#                    name:    bearer
#                throw_exceptions:        true     # When an authentication failure occurs, return a 401 response immediately
#                create_entry_point:      true      # When no authentication details are provided, create a default entry point that returns a 401 response

#        api:
#            pattern:   ^/api
#            provider:  fos_userbundle
#            stateless: true
#            lexik_jwt:
#                authorization_header: # check token in Authorization Header
#                    enabled: true
#                    prefix:  Bearer
#                query_parameter:      # check token in query string parameter
#                    enabled: true
#                    name:    bearer
#                throw_exceptions:        true     # When an authentication failure occurs, return a 401 response immediately
#                create_entry_point:      true      # When no authentication details are provided, create a default entry point that returns a 401 response



    access_control:
        - { path: ^/user/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, role: ROLE_ADMIN }
        - { path: ^/profile, role: ROLE_USER }
        - { path: ^/api/urls, role: ROLE_USER, methods: [ PUT, PATCH, DELETE] }
        - { path: ^/api/urls, role: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET, POST] }